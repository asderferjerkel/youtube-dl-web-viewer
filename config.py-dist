# Config for youtube-dl-web-viewer
# Copy config.py-dist to instance/config.py to use
# Missing values will fall back to defaults from app/__init__.py

import logging
import datetime

# Secret key: set this to something random to protect your sessions
SECRET_KEY = 'dev'

#######################################################
# Most stuff below this line can be left as default
#######################################################

# Session lifetime: defaults to 3 months
PERMANENT_SESSION_LIFETIME = datetime.timedelta(days=93)
# CSRF token lifetime: defaults to expire with session
WTF_CSRF_TIME_LIMIT = None

# Database path: will be created on first run
DATABASE = os.path.join(current_app.instance_path, 'data.sqlite')

# Video extensions: scanner will look for videos with these extensions
# (MIME types are used for embedding)
VIDEO_EXTENSIONS = {
	'.mp4': 'video/mp4',
	'.webm': 'video/webm',
	'.mkv': 'video/x-matroska',
	'.flv': 'video/x-flv'
	}

# Thumbnail extensions: scanner will look for thumbnails with these extensions
# MIME types are also used for embedding, so ensure all THUMBNAIL_FORMATS are
# also listed here
THUMBNAIL_EXTENSIONS = {
	'.webp': 'image/webp',
	'.avif': 'image/avif',
	'.jpg': 'image/jpeg',
	'.jpeg': 'image/jpeg',
	'.png': 'image/png',
	'.gif': 'image/gif'
	}

# Metadata extension: scanner will look for metadata files with this extension
METADATA_EXTENSION = '.info.json'

# Sort columns: web interface offers these columns to sort playlists by
# (see videos table in app/create_db.sql for more)
SORT_COLUMNS = {
	'playlist_index': 'Playlist',
	'sort_title': 'Title',
	'position': 'Filename #',
	'filename': 'Filename A-Z',
	'upload_date': 'Uploaded',
	'modification_time': 'Downloaded',
	'view_count': 'Views',
	'average_rating': 'Rating',
	'duration': 'Duration'
	}

# Display settings: defaults for logged-out users and new user sessions
#	'autoplay':			True or Falsae
#	'shuffle':			True or False
#	'sort_by':			A column from SORT_COLUMNS
#	'sort_direction':	'asc' or 'desc'
DISPLAY_PREFS = {
	'autoplay': True,
	'shuffle': False,
	'sort_by': 'modification_time',
	'sort_direction': 'desc'
}

# Thumbnail formats: scanner will generate small thumbnails in these formats
#   'key':           Filetype string used to check for Pillow support
#   'export_format': Filetype string used to export that format
#   'priority':      Determines the order in which missing formats fall back to
#                    others (higher priorities are preferred)
THUMBNAIL_FORMATS = {
	'jpg':  { 'export_format': 'JPEG',
			  'priority': 0 },
	'webp': { 'export_format': 'WEBP',
			  'priority': 1 }
	}

# Thumbnail size: maximum width, height to generate playlist thumbnails
THUMBNAIL_SIZE = 128, 72

# Thumbnail quality: integer 1-95, used for jpg and webp exports
THUMBNAIL_QUALITY = 70

# Log level: will log events this level or higher to the database
# Follow "logging." with NOTSET, DEBUG, INFO, WARNING, ERROR or CRITICAL
DATABASE_LOG_LEVEL = logging.DEBUG