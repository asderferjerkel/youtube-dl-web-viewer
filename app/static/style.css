html {
	/* System UI fonts ripped off from 
	   https://meta.stackexchange.com/questions/364048/we-are-switching-to-system-fonts-on-may-10-2021 */
	--sans:
		system-ui, -apple-system, BlinkMacSystemFont,
		"Segoe UI Variable", "Segoe UI",
		"Ubuntu",
		"Roboto", "Noto Sans", "Droid Sans",
		sans-serif;
	--serif: Georgia, Cambria, "Times New Roman", Times, serif;
	--mono:
		ui-monospace,
		"Cascadia Mono", "Segoe UI Mono",
		"Ubuntu Mono",
		"Roboto Mono",
		Menlo, Monaco, Consolas,
		monospace;
	
	font-size: 100%; /* Fallback to browser size (usually 16px) */
	font-size: clamp(100%, 0.45rem + 1vmin, 24px);
	box-sizing: border-box;
}

*, *:before, *:after {
	box-sizing: inherit; /* https://www.paulirish.com/2012/box-sizing-border-box-ftw/ */
}

html, body, p, ul, ol, li, h1, h3, h4, h5, h6, button, input[type="submit"] {
	/* reset browser defaults */
	margin: 0;
	padding: 0;
	border: 0;
}

body {
	--foreground: black;
	--background: white;
	--header: whitesmoke;
	--player: black;
	--aside: grey;
	--loading: #d6d6d6;
	--selected: #f5f5f5;
	--hover: #e8e8e8;
	--info: #8fb8ff;
	--warn: #ffdb72;
	--error: #ff6557;
	
	font-family: var(--sans);
	line-height: 120%;
	text-align: left;
	background-color: var(--background);
	color: var(--foreground);
}

@media (prefers-color-scheme: dark) {
	body {
		--foreground: white;
		--background: #1f1f1f;
		--header: crimson;
		--player: black;
		--aside: grey;
		--loading: #6f6f6f;
		--selected: #484848;
		--hover: #5d5c5c;
		--info: #3e6ab5; /* todo: nicer */
		--warn: #b96713;
		--error: #932419;
	}
	
	.player .placeholder::before,
	.list-container::before,
	.info-container::before {
		filter: invert(1); /* Invert background-image colours */
	}
}

p {
	margin: 0 0 1rem 0;
}

a {
	text-decoration: none;
	font-weight: bold;
	color: inherit;
}

button, input[type="submit"] {
	color: var(--foreground);
	background-color: var(--hover);
	font-size: 0.9rem;
}

dt {
	margin: 1rem 0 0.5rem 1rem;
	font-size: 1.1rem;
}

dd {
	margin: 0 0 0.5rem 2rem;
}

	dd ul {
		margin-left: 2rem;
	}

pre {
	display: inline;
	white-space: pre-wrap;
	word-break: break-word;
	font-family: var(--mono);
}

table {
	position: relative;
	width: 100%;
	border: 0;
	border-collapse: collapse;
}

	table thead::after {
		/* Decorative separator */
		content: "";
		position: absolute;
		width: min(40rem, 100%);
		height: 0.5rem;
		z-index: -1;
		margin-top: -0.2rem;
		
		background-image: url('horizontal-1.svg');
		background-size: 100% 0.5rem;
		background-position: 0 0;
		background-repeat: no-repeat;
	}
	
		table tr {
			vertical-align: top;
		}
	
			table td, table th {
				padding: 0.4rem;
			}
			
			table td {
				word-break: break-word;
			}
			
			/* Sensible minimums, message takes the rest */
			.error-log th:nth-child(1) {
				width: 18%;
				min-width: 7rem;
			}
			
			.error-log th:nth-child(2) {
				width: 10%;
				min-width: 4.5rem;
			}
		
@media screen and (max-width: 440px) {
	table tr {
		display: flex;
		flex-flow: row wrap;
	}
	
		tbody tr:first-child {
			margin-top: 0.5rem;
		}
		
		tbody tr {
			margin-bottom: 0.8rem;
		}
		
			table td, table th {
				padding: 0.2rem 0.5rem;
			}
	
	/* Break each row into two */
	.error-log th:nth-child(1), .error-log td:nth-child(1) {
		width: 70%;
	}
	
	.error-log th:nth-child(2), .error-log td:nth-child(2) {
		width: 30%;
	}
	
	.error-log th:nth-child(3), .error-log td:nth-child(3) {
		width: 100%;
	}	
}

.container {
	display: grid;
	/* Player based on viewport width but can shrink
	   Sidebar fixed based on font size (slightly responsive to viewport width)
	   Outer padding only when excess width */
	grid-template-columns: [page-left] 1fr [main-left] minmax(0, 60vw) [main-right sidebar-left] minmax(0, 25rem) [sidebar-right] 1fr [page-right];
	grid-template-rows: [header-top] auto [header-bottom messages-top] min-content [messages-bottom];
	column-gap: 1rem;
}

	.container .hidden {
		display: none;
	}
	
	.header-container {
		grid-column: page-left / span page-right;
		
		display: grid;
		grid-template-columns: inherit;
		grid-template-rows: inherit;
		column-gap: inherit;
		
		margin-bottom: 0.5rem;
		background-color: var(--header);
	}
	
		header {
			grid-column: main-left / span sidebar-right;
			grid-row: header-top / header-bottom;
			
			display: grid;
			grid-template-columns: 0 [title-left] max-content [title-right nav-left] 1fr [nav-right] 0;
			/* grid-template-rows: 100%; /* Set height for flex elements to fill when not wrapped */
			align-items: center; /* Vertically align header items */
			column-gap: 0.5rem;
		}
		
			header li {
				display: inline-flex;
			}
			
			header .sprite {
				height: 100%;
			}
			
			.site-logo, header .navigation a {
				height: 2.75rem; /* Logo & menu item height */
				padding: 0.5rem 0;
			}

			.site-logo {
				grid-column: title-left / title-right; /* Gap on either side */
				
				margin-right: 0.5rem;
			}

			header .toggle-menu {
				grid-column: nav-left / nav-right;
				
				display: none; /* Only shown on small screens */
			}
			
				.toggle-menu button, .loading {
					width: 2.5rem;
					height: 2.5rem;
					background: none;
				}
			
					.toggle-menu .sprite {
						width: 100%;
					}
				
				@keyframes rotate {
					from {
						transform: rotate(0deg);
					}
					to {
						transform: rotate(360deg);
					}
				}
				
				.loading .sprite {
					display: none; /* Default hide spinner */
					animation: rotate 1s infinite linear;
				}
			
			header .navigation {
				grid-column: nav-left / nav-right;
				
				display: flex;
				flex-flow: row-reverse wrap;
				align-content: center; /* Centre uls vertically */
			}

				.navigation .user, .navigation .pages {
					flex: 1 auto; /* Fill space, only wrap if needed */
					/* Vertically align nav items */
					display: flex;
					align-items: center;
					
					column-gap: 0.5rem; /* Menu item spacing */
				}

				.navigation .user, header .toggle-menu {
					justify-content: flex-end; /* Align to right edge of header */
				}
				
					.navigation a {
						/* Vertically align nav items */
						display: flex;
						align-items: center;
					}
			
						header a:hover, header button:hover {
							filter: drop-shadow(0 0 0.2rem yellow);
						}
				
		@media screen and (max-width: 440px) {
			header .toggle-menu {
				display: flex; /* Show menu button */
			}
			
			header .navigation {
				grid-column: title-left / span nav-right; /* Push onto second row */
				display: none; /* Default hide menu */
			}
			
			header .navigation.toggled {
				display: flex;
			}
			
			.loading-large {
				display: none; /* Hide loading spinner on user row */
			}
		}

	.messages {
		grid-column: main-left / span sidebar-right;
		grid-row: messages-top / messages-bottom;
		
		margin-bottom: 0.5rem;
	}
		
		/* See .notifications for colours */
		.flash {
			display: grid;
			grid-template-columns: [level] minmax(0, 2rem) [content] 1fr [close] auto;
			align-items: center;
			column-gap: 1rem;
			padding: 0.5rem 1rem;
			margin-bottom: 0.5rem;
		}
		
		.flash:first-of-type {
			margin-top: 0.5rem;
		}
		
			.flash .level {
				grid-column: level;
				
				align-self: top;
			}

			.flash .content {
				grid-column: content;
			}

			.flash .close {
				grid-column: close;
				
				width: 2rem;
				height: 2rem;
				cursor: pointer;
				background: none;
			}
			
				.flash .sprite {
					width: 100%;
				}

	.main {
		grid-column: main-left / main-right;
		
		margin-top: 0.25rem;
	}
		
		.player {
			/* Fixed aspect ratio */
			/* todo: css aspect-ratio */
			height: 0;
			overflow: hidden;
			padding-bottom: calc(100% / (16/9));
			position: relative;
			background-color: var(--player);
		}
			
			.player video, .overlay {
				/* Video and overlays inherit fixed aspect ratio */
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
			}
			
			.overlay {
				display: grid;
				justify-items: center; /* Horiztontal centre */
				align-content: center; /* Vertical centre (multiple rows are aligned together) */
				row-gap: 5%;

				z-index: 1; /* Cover video */
			}
			
			.play-manual {
				background-color: rgba(0, 0, 0, 0.2);
				transition: background-color 0.7s, opacity 0.2s;
			}
			
				.play-manual:hover {
					cursor: pointer;
					background-color: rgba(0, 0, 0, 0);
				}
					
					.play-manual:hover .play-hover {
						opacity: 1;
					}
				
				.play-manual .sprite {
					/* Sprites overlay each other */
					grid-row: 1;
					grid-column: 1;
					width: max(6rem, 15%); /* Sensible min for tiny screens */
				}
				
				.play-manual .play-fg {
					z-index: 3; /* Stacks fg, hover, bg */
				}
				
				.play-manual .play-hover {
					z-index: 2;
					opacity: 0;
					transition: opacity 0.1s;
				}
			
			.player .placeholder {
				background-color: var(--background); /* Cover elements underneath */
			}
			
				.player .placeholder::before {
					--border-offset: 0.25rem;
					--border-width: 0.75rem;
					--margin: 0.25rem;
					
					content: "";
					position: absolute;
					width: calc(100% - (var(--margin) * 2));
					height: calc(100% - (var(--margin) * 2));
					left: 0;
					top: 0;
					margin: var(--margin);
					
					background-image:
						url('horizontal-5.svg'),
						url('vertical-5.svg'),
						url('horizontal-6.svg'),
						url('vertical-6.svg');
					background-size:
						100% var(--border-width),
						var(--border-width) 100%,
						100% var(--border-width),
						var(--border-width) 100%;
					background-position:
						left 0 top var(--border-offset),
						left var(--border-offset) top 0,
						right 0 bottom var(--border-offset),
						right var(--border-offset) bottom 0;
					background-repeat: no-repeat;
				}
				
					.player .placeholder .sprite {
						width: 30%; /* proportional to player (can't use height as grid row height expands) */
						opacity: 65%;
					}
		
		.info-container {
			position: relative;
			
			padding: 1rem 1rem 1rem 2rem;
			margin-bottom: 1rem;
		}
			
			.info-container::before {
				/* Decorative line left of infobox */
				content: "";
				position: absolute;
				width: 100%;
				height: 100%;
				left: 0;
				top: 0;
				z-index: -1;
				
				background-image: url('vertical-7.svg');
				background-size: 0.5rem calc(100% - 1.5rem);
				background-position: 0.5rem 1rem;
				background-repeat: no-repeat;
			}
			
			.info-container .info {
				display: grid;
				grid-template-columns: repeat(5, 1fr);
				grid-template-rows: auto;
				grid-template-areas:
					" title  title  title  title  title  "
					" user   user   user   views  rating "
					" date   date   date   format link   "
					" desc   desc   desc   desc   desc   ";
				
				justify-content: space-between;
				align-items: center;
				column-gap: 1rem;
				row-gap: 0.3rem;
			}
			
				.title {
					grid-area: title;
					
					font-size: 1.5rem;
					line-height: 2rem;
					margin: 0.25rem 0 0.75rem 0;
				}
				
				.uploader {
					grid-area: user;
					
					margin-right: auto; /* Only clickable where visible */
					word-break: break-word; /* Long names can break */
					color: inherit;
				}
				
				.views {
					grid-area: views;
				}
				
				.rating {
					grid-area: rating;
					
					display: grid;
					position: relative;
					grid-template-columns: minmax(4rem, 6rem) auto;
					align-items: center; /* Centre vertically */
					justify-content: center; /* Items together in horizontal centre */
					column-gap: 0.5rem;
				}
				
					.rating .sprite {
						/* Images overlay each other */
						grid-column: 1;
						grid-row: 1;
					}
				
					.stars-filled {
						z-index: 1; /* On top of empty */
						clip-path: inset(0 100% 0 0); /* Hide by default */
					}
					
					.stars-empty {
						opacity: 0.2; /* Faded as background */
					}
				
				.date {
					grid-area: date;
				}
				
				.format {
					grid-area: format;
				}
				
				.link {
					grid-area: link;
					
					display: flex;
					align-items: center;
					margin: 0 auto; /* Only clickable where visible */
				}
				
					.link .sprite {
						width: 2rem;
						height: 2rem;
						margin: 0 0.25rem;
					}
				
				.views, .rating, .format, .link {
					text-align: center;
				}
				
					.views-value {
						font-size: 1.2rem;
					}
				
				.meta-label {
					font-size: 0.75rem;
					line-height: 1rem;
				}
			
				.description-container {
					grid-area: desc;
					
					display: grid;
					/* minmax(0, 1fr) prevents blowout from long description lines */
					grid-template-columns: repeat(2, auto minmax(0, 1fr));
					grid-template-rows: min-content;
					grid-template-areas:
						" desc-text  desc-text  desc-text  desc-text "
						" tags-label tags       cats-label cats      ";
					
					column-gap: 2rem;
					row-gap: 1rem;
				}
				
				.info-container:not(.full-height) .description-container {
					/* Overflow and fade when not full height */
					overflow: hidden;
					max-height: 4.75rem; /* ~fits in a 1920x1080 16:9 viewport */
					-webkit-mask-image: linear-gradient(to bottom, black 50%, transparent 100%);
					mask-image: linear-gradient(to bottom, black 50%, transparent 100%);
				}
				
					.description {
						grid-area: desc-text;
						
						word-break: break-word; /* Long lines can break */
					}
					
						.description p {
							margin-bottom: 0.75rem;
						}
					
					.tags-label, .tags, .categories-label, .categories {
						/* grid-row: 2; */
					}
					
					.tags-label {
						grid-area: tags-label;
					}
					
					.tags {
						grid-area: tags;
					}
					
					.cats-label {
						grid-area: cats-label;
					}
					
					.cats {
						grid-area: cats;
					}
			
			.show-more {
				position: absolute;
				display: flex;
				justify-content: center;
				width: 100%;
				bottom: -0.5rem;
				margin-left: -2rem; /* Offset left/right padding difference on container */
			}
			
				.show-more a {
					cursor: pointer;
				}
			
				.full-height .less-link, .more-link {
					/* Display "show more" by default;
					   "show less" when full height */
					display: block;
				}
			
				.full-height .more-link, .less-link {
					/* Hide "show less" by default;
					   "show more" when full height */
					display: none;
				}
				
			@media screen and (max-width: 660px) {
				.info {
					grid-template-columns: repeat(4, 1fr);
					grid-template-areas:
						" title  title  title  title  "
						" user   user   views  rating "
						" date   date   format link   "
						" desc   desc   desc   desc   ";
				}
			}
			
			@media screen and (max-width: 440px) {
				.info {
					grid-template-columns: repeat(2, 1fr);
					grid-template-areas:
						" title  title  "
						" user   user   "
						" views  rating "
						" format link   "
						" date   date   "
						" desc   desc   ";
				}
				
					.views, .format {
						/* text-align: left; */
					}
					
					.format .meta-label {
						display: inline-block;
					}
				
				.description-container {
					grid-template-areas:
						" desc-text  desc-text  desc-text  desc-text "
						" tags-label tags       tags       tags      "
						" cats-label cats       cats       cats      ";
				}
			}
	
	.sidebar {
		grid-column: sidebar-left / sidebar-right;
		
		display: grid;
		grid-template-rows: repeat(3, min-content);
		margin: 0.5rem;
		/* row-gap: 1rem; */
	}
		
		.controls {
			display: grid;
			/* Empty space between so controls aligned to left & right */
			grid-template-columns: [playback] auto 1fr [playlist] auto;
			row-gap: 0.5rem; /* When wrapped on small screens */
			margin: 0.25rem;
		}
		
			.playback-controls {
				grid-column: playback;
			}
			
			.playlist-controls {
				grid-column: playlist;
			}
			
			@media screen and (max-width: 400px) {
				.playback-controls {
					/* Push playlist controls to new row */
					grid-column: span 3;
				}
			}
		
				.controls button {
					position: relative;
					width: 2.5rem;
					height: 2.5rem;
					margin: 0 0.1rem;
					padding: 0.2rem;
					background: none;
				}
					
					.controls button:hover, .controls .select-container:hover::before {
						background-color: var(--hover);
					}
					
					.controls .toggle::before {
						content: "";
						position: absolute;
						width: 0.5rem;
						height: 0.5rem;
						right: 0.2rem;
						bottom: 0.2rem;
						border-radius: 50%;
						background: crimson; /* todo */
					}
					
					.controls .toggle.enabled::before {
						background: limegreen;
					}
				
					.controls .sprite {
						width: 100%; /* Contain dropdown arrow */
						height: 100%;
					}
					
				.controls .select-container {
					/* Contains select & arrow for hover background */
					display: inline-block;
					position: relative;
					/* Vertical align with buttons */
					top: -0.65rem;
					margin: 0 0.1rem -0.65rem;
				}
				
					.controls .select-container::before {
						/* Placeholder for background */
						content: "";
						position: absolute;
						width: 100%;
						height: 100%;
						z-index: -2;
						background-color: var(--selected);
					}
					
					.controls select {
						height: 2.5rem;
						padding: 0 1.75rem 0 0.5rem; /* Leave space for custom arrow */
						appearance: none; /* Hide default arrow */
						/* Override browser defaults */
						font-size: 1rem;
						border: 0;
						font-family: inherit;
						background: none;
						color: inherit;
					}
					
						.controls option {
							/* Dropdown items */
							font-family: inherit;
							background: var(--background); /* inherit doesn't work here */
							color: var(--foreground);	   /*        ¯\_(ツ)_/¯ 			*/
						}
						
						.controls option[disabled] {
							display: none; /* Hide placeholder from list */
						}
					
					.controls .select-arrow {
						/* Custom dropdown arrow */
						position: absolute;
						width: 1rem;
						height: 100%;
						top: 0.1rem;
						right: 0.4rem;
						/* Under select so doesn't block click, above background */
						z-index: -1;
					}
		
		.list-container {
			--thumb-width: 5.1rem;
			--item-gap: 0.25rem;
			--border-offset: 0.25rem;
			--border-width: 0.5rem;
			
			position: relative;
			 /* Space for border + a little breathing room */
			padding: calc(var(--border-offset) + var(--border-width) + 0.1rem);
			overflow: hidden;
		}
		
			.list-container::before {
				content: "";
				position: absolute;
				height: 100%;
				width: 100%;
				left: 0;
				top: 0;
				z-index: -1; /* Behind contents */
				
				background-size:
					100% var(--border-width),
					var(--border-width) 100%,
					100% var(--border-width),
					var(--border-width) 100%;
				background-position:
					left 0 top var(--border-offset),
					left var(--border-offset) top 0,
					right 0 bottom var(--border-offset),
					right var(--border-offset) bottom 0;
				background-repeat: no-repeat;
			}
		
		.playlists {
			/* Fit at least 3 items, or one if fewer */
			min-height: 3.75rem;
			/* max-height: 15vh; */
			max-height: max(15vh, calc(3 *
						(2.25rem + var(--item-gap)) +
						2 * (var(--border-offset) +
							 var(--border-width))));
			margin-bottom: 1rem;
		}
		
			.playlists::before {
				background-image:
					url('horizontal-1.svg'),
					url('vertical-1.svg'),
					url('horizontal-2.svg'),
					url('vertical-2.svg');
			}
		
		.videos {
			/* Fit at least 10 items, or 1 if fewer */
			min-height: calc(((var(--thumb-width) / 16) * 9) +
						2 * (var(--border-offset) +
							 var(--border-width)));
			/* max-height: 65vh; */
			max-height: max(65vh, calc(10 *
						(((var(--thumb-width) / 16) * 9) + var(--item-gap)) +
						2 * (var(--border-offset) +
							 var(--border-width)));
		}
			
			.videos::before {
				background-image:
					url('horizontal-3.svg'),
					url('vertical-3.svg'),
					url('horizontal-4.svg'),
					url('vertical-4.svg');
			}
	
			.list {
				list-style: none;
				/* Limit to parent and scroll overflow */
				max-height: 100%;
				overflow-y: auto;
			}
				
				.list .selected {
					background-color: var(--selected);
				}
				
				.list li {
					display: grid;
					grid-template-columns: var(--thumb-width) 1fr;
					align-items: center;
					
					width: 100%;
					margin: var(--item-gap) 0;
					cursor: pointer;
				}
					
					.list li:first-child, .list li:last-child {
						margin: 0;
					}
					
					.list li:hover {
						background-color: var(--hover);
					}
					
					.list .number {
						font-family: var(--serif);
						font-weight: bold;
						/* Numbers line up vertically on baseline */
						font-feature-settings: lnum;
						font-variant-numeric: lining-nums;
					}
					
					.list .name {
						margin: 0 0.75rem;
					}
			
				.playlist {
					padding: 0.1rem 0;
				}
				
					.playlist .count {
						text-align: center;
					}
						
						.playlist .number {
							position: relative;
							top: -0.1rem; /* Offset serif font valign */
							font-size: 1.5rem;
							line-height: 1.5rem;
						}
					
						.playlist .caption {
							font-size: 0.5rem;
							line-height: 0.75rem;
						}

					.playlist .name {
						text-overflow: ellipsis;
						overflow: hidden;
						white-space: nowrap;
					}
				
					.video .thumbnail {
						display: grid;
						grid-template-columns: [thumb] 1fr;
						
						position: relative;
						height: calc((var(--thumb-width) / 16) * 9);
						overflow: hidden;
						
						background-color: var(--loading);
					}
					
						.video .duration {
							position: absolute;
							right: 0.2rem;
							bottom: 0.2rem;
							padding: 0 0.2rem;
							
							font-size: 0.75rem;
							background-color: rgba(0, 0, 0, 0.6);
							color: white;
						}
					
						.video .thumbnail img {
							grid-column: thumb; /* Overlays number */
							
							height: 100%;
						}
						
						.video .number {
							grid-column: thumb;
							
							/* Oversized play order */
							font-size: 2.75rem;
							line-height: 3rem;
							margin-top: 0.2rem; /* Push slightly out of bottom */
							margin-left: 0.3rem;
							opacity: 0.3;
						}
						
					.video .name {
						overflow: hidden;
						display: -webkit-box;
						-webkit-line-clamp: 2;
						-webkit-box-orient: vertical;
					}

@media screen and (max-width: 860px) {
	.container {
		/* Wider messages */
		column-gap: 0.5rem;
	}
	
		.header-container, .messages {
			/* No gap between header and video unless messages */
			margin-bottom: 0;
		}
		
		.main {
			margin-top: 0;
		}
		
		.main, .sidebar {
			/* Video, info, sidebar extend to edges */
			grid-column: page-left / span page-right;
		}
}

.full-width {
		grid-column: page-left / span page-right;
		
		/* Limit line length on giant screens, leave some breathing room on small */
		max-width: min(90vw, 75rem);
		margin: 0 auto;
	}
	
	form {
		max-width: min(90vw, 40rem);
		margin: 1rem auto 1rem 2rem;
	}
	
		form button, form input[type="submit"] {
			height: 1.75rem;
			padding: 0.25rem;
		}

	.grid-form {
		display: grid;
		grid-template-columns: [label] minmax(0, 17rem) [field] 1fr;
		align-items: center;
		column-gap: 1rem;
	}
		
		.grid-form label {
			grid-column: label;
		}
		
		.grid-form input, .grid-form select, .grid-form button, .grid-form .field {
			grid-column: field;
		}
		
		.grid-form input, .grid-form select, .grid-form .field {
			height: 1.5rem;
		}
		
		.grid-form input[type="checkbox"] {
			height: 1rem;
			width: 1rem;
		}
		
		.grid-form .field-help, .grid-form .errors {
			grid-column: span 2;
			
			font-size: 0.8rem;
			margin: 0.25rem 0 1rem 0.5rem;
		}
	
	.placeholder {
		padding: 0.5rem;
		text-align: center;
		font-style: italic;
		color: var(--aside);
	}

@media screen and (max-width: 860px) {
	form {
		margin: 1rem auto;
	}
	
		/* One-column form on small screens */
		.grid-form label {
			grid-column: span 2;
			
			margin: 0.5rem 0;
		}
		
		.grid-form input, .grid-form select, .grid-form button, .grid-form .field {
			grid-column: span 2;
			
			height: 2rem;
			margin: 0.25rem 0.5rem;
		}
		
		.grid-form input[type="checkbox"] {
			margin-left: 1rem;
		}
		
		.grid-form .field-help, .grid-form .errors {
			margin-bottom: 0.5rem;
		}
}

.notifications {
	position: fixed;
	z-index: 3;
	top: 0;
	right: 1rem;
	
	list-style: none;
}

	.notifications .info, .messages .info {
		background-color: var(--info);
	}
	
	.notifications .warn, .messages .warn {
		background-color: var(--warn);
	}
	
	.notifications .error, .messages .error {
		background-color: var(--error);
	}

	.notification {
		display: grid;
		/* Level, content, close */
		grid-template-columns: minmax(1rem, 2rem) 1fr minmax(1rem, 2rem);
		align-items: start; /* Vertical align top */
		column-gap: 1rem;
		row-gap: 0; /* Override inherit from parent */
		
		width: min(90vw, 20rem);
		height: auto;
		margin: 1rem 0;
		padding: 1rem;
		background: var(--background);
		box-shadow: 4px 4px 0 var(--foreground);
		transition: opacity 0.5s;
	}
	
		.notification .content {
			align-self: center; /* Vertical align centre */
		}
		
		.notification .action {
			margin-top: 0.75rem;
			padding: 0.5rem;
			background-color: var(--hover);
			color: var(--foreground);
			font-size: 0.9rem;
		}
		
		.notification .close {
			background: none;
			cursor: pointer;
		}
		
			.notification .sprite {
				width: 100%;
			}

@media screen and (max-width: 860px) {
	.notifications {
		/* Bottom of viewport to not cover player */
		top: unset;
		bottom: 0;
	}
}
	
.templates {
	display: none;
}

/* SVG sprites */
.sprite {
	fill: var(--foreground); /* Any shape with no inline fill defined */
}

.sprite.invert {
	fill: var(--background);
}